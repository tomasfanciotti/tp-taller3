{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/pets": {
            "get": {
                "description": "Get all pets in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pet"
                ],
                "summary": "Get all pets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "name of pet to search",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "type pet to search",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner of the pet to search",
                        "name": "owner_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset of the results",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit of the results ",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            }
        },
        "/pets/owner/{owner_id}": {
            "get": {
                "description": "Get a pet list given the owner ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pet"
                ],
                "summary": "Get pets of owner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "owner id to get pets",
                        "name": "owner_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "offset of the results",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit of the results ",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SearchResponse-model_Pet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            }
        },
        "/pets/pet": {
            "post": {
                "description": "Create a pet for a given user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pet"
                ],
                "summary": "Creates a Pet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "description": "pet info",
                        "name": "pet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.Pet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Pet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            }
        },
        "/pets/pet/{id}": {
            "get": {
                "description": "Get pet info given a pet ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pet"
                ],
                "summary": "Get a Pet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "id of the pet",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Pet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit pet info given a pet ID and pet info needed to update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pet"
                ],
                "summary": "Edit a Pet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "id of the pet",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "pet info",
                        "name": "pet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.Pet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Pet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a pet given a pet ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pet"
                ],
                "summary": "Delete a Pet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "id of the pet",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            }
        },
        "/vaccines/plan/{pet_id}": {
            "get": {
                "description": "Get the vaccination plan of given pet_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vaccine"
                ],
                "summary": "Get vaccination plan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pet id to get vaccines",
                        "name": "pet_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "applied",
                            "pending"
                        ],
                        "type": "string",
                        "description": "desired formant for the output",
                        "name": "output",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VaccinationPlan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            }
        },
        "/vaccines/vaccine": {
            "post": {
                "description": "Create a vaccine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vaccine"
                ],
                "summary": "Creates a Vaccine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "description": "vaccine info",
                        "name": "vaccine",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.Vaccine"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Vaccine"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            }
        },
        "/vaccines/vaccine/{id}": {
            "get": {
                "description": "Get vaccine info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vaccine"
                ],
                "summary": "Get a Vaccine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "id of the vaccine",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Vaccine"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit vaccine info given a pet ID and vaccine info needed to update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vaccine"
                ],
                "summary": "Edit a Vaccine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "id of the vaccine",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "vaccine info",
                        "name": "vaccine",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.Vaccine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Vaccine"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Vaccine given a pet ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vaccine"
                ],
                "summary": "Delete a Vaccine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "id of the vaccine",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            }
        },
        "/veterinaries": {
            "get": {
                "description": "Get veterinaries applying filters by city, day_guard, offset and limit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Veterinary"
                ],
                "summary": "Get veterinaries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "city of the veterinary",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "day_guard of the veterinary",
                        "name": "day_guard",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset of the results",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit of the results ",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SearchResponse-model_Veterinary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            }
        },
        "/veterinaries/veterinary": {
            "post": {
                "description": "Create a Veterinary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Veterinary"
                ],
                "summary": "Creates a Veterinary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "description": "Veterinary info",
                        "name": "veterinary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.Veterinary"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Veterinary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            }
        },
        "/veterinaries/veterinary/{id}": {
            "get": {
                "description": "Get veterinary info given a veterinary ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Veterinary"
                ],
                "summary": "Get a veterinary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "id of the veterinary",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Veterinary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit Veterinary info given a veterinary ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Veterinary"
                ],
                "summary": "Edit a Veterinary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "id of the Veterinary",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Veterinary info",
                        "name": "veterinary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.Veterinary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Veterinary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Veterinary given a veterinary ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Veterinary"
                ],
                "summary": "Delete a Veterinary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "request from telegram",
                        "name": "X-Telegram-App",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chat id of the telegram user",
                        "name": "X-Telegram-Id",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "id of the veterinary",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.APIError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "controller.Doctor": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "JuanValdez@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "Juan Valdez"
                },
                "phone": {
                    "type": "string",
                    "example": "123456789"
                }
            }
        },
        "controller.Location": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number",
                    "example": -34.603684
                },
                "longitude": {
                    "type": "number",
                    "example": -58.381559
                }
            }
        },
        "controller.Pet": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "2013-05-23"
                },
                "name": {
                    "type": "string",
                    "example": "Raaida"
                },
                "owner_id": {
                    "type": "string",
                    "example": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
                },
                "type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.AnimalType"
                        }
                    ],
                    "example": "dog"
                }
            }
        },
        "controller.Vaccine": {
            "type": "object",
            "properties": {
                "animal": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.AnimalType"
                        }
                    ],
                    "example": "dog"
                },
                "description": {
                    "type": "string",
                    "example": "vaccine to preventing rage"
                },
                "name": {
                    "type": "string",
                    "example": "anti-rabies"
                },
                "scheduled": {
                    "type": "integer",
                    "example": 365
                }
            }
        },
        "controller.Veterinary": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Av. Siempreviva 123"
                },
                "city_id": {
                    "type": "string",
                    "example": "Buenos Aires"
                },
                "day_guard": {
                    "type": "integer",
                    "example": 1
                },
                "doctors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.Doctor"
                    }
                },
                "email": {
                    "type": "string",
                    "example": "veterinary1@gmail.com"
                },
                "img_url": {
                    "type": "string",
                    "example": "www.veterinary1.com/img.png"
                },
                "location": {
                    "$ref": "#/definitions/controller.Location"
                },
                "name": {
                    "type": "string",
                    "example": "Veterinary 1"
                },
                "phone": {
                    "type": "string",
                    "example": "123456789"
                },
                "web_site": {
                    "type": "string",
                    "example": "www.veterinary1.com"
                }
            }
        },
        "model.AnimalType": {
            "type": "string",
            "enum": [
                "dog",
                "cat",
                "bird",
                "hamster"
            ],
            "x-enum-varnames": [
                "Dog",
                "Cat",
                "Bird",
                "Hamster"
            ]
        },
        "model.Doctor": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "model.Location": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "model.Paging": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "model.Pet": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "img_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "register_date": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/model.AnimalType"
                }
            }
        },
        "model.SearchResponse-model_Pet": {
            "type": "object",
            "properties": {
                "paging": {
                    "$ref": "#/definitions/model.Paging"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Pet"
                    }
                }
            }
        },
        "model.SearchResponse-model_Veterinary": {
            "type": "object",
            "properties": {
                "paging": {
                    "$ref": "#/definitions/model.Paging"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Veterinary"
                    }
                }
            }
        },
        "model.VaccinationPlan": {
            "type": "object",
            "properties": {
                "applied": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Vaccine"
                    }
                },
                "name": {
                    "type": "string"
                },
                "ownerID": {
                    "type": "string"
                },
                "pending": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Vaccine"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.Vaccine": {
            "type": "object",
            "properties": {
                "animal": {
                    "$ref": "#/definitions/model.AnimalType"
                },
                "applied_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scheduled": {
                    "type": "integer"
                }
            }
        },
        "model.Veterinary": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city_id": {
                    "type": "string"
                },
                "day_guard": {
                    "type": "integer"
                },
                "doctors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Doctor"
                    }
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "img_url": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/model.Location"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "web_site": {
                    "type": "string"
                }
            }
        }
    }
}